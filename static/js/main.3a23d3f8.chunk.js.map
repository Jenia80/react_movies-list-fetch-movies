{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getData","title","a","fetch","response","json","FindMovie","addMovie","useState","search","setSearch","setMovie","searchError","setSearchError","Findmovie","useCallback","trim","findMovie","respons","Response","Add","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a23d3f8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const URL = 'https://www.omdbapi.com/?apikey=29a9cf6d&';\n\nexport const getData = async (title: string) => {\n  const response = await fetch(`${URL}t=${title}`);\n\n  return response.json();\n};\n","import './FindMovie.scss';\nimport React, { FormEvent, useCallback, useState } from 'react';\nimport { MovieCard } from '../MovieCard';\nimport { getData } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [search, setSearch] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [searchError, setSearchError] = useState('');\n\n  const Findmovie = useCallback(() => {\n    if (!search.trim()) {\n      setSearchError('Invalid Data!');\n    } else {\n      const findMovie = async () => {\n        const respons = await getData(search);\n\n        if (respons.Response === 'True') {\n          setMovie(respons);\n          setSearchError('');\n        } else {\n          setSearchError('Cant find movie');\n        }\n      };\n\n      findMovie();\n    }\n  }, [search]);\n\n  const Add = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!searchError && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setSearch('');\n    }\n  }, [movie, searchError]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={Add}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"label\"\n              value={search}\n              onChange={(event) => {\n                setSearch(event.target.value);\n              }}\n            />\n          </div>\n          {searchError && (\n            <p className=\"help is-danger\">\n              {searchError}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={Findmovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && (\n          <MoviesList\n            movies={movies}\n          />\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}